package navbar

import (
	"github.com/FACorreiaa/go-templui/app/models"
	"github.com/FACorreiaa/go-templui/app/utils"
)

type Props struct {
	Nav       models.Navigation
	User      *models.User
	ActiveNav string
	Class     string
}

templ Navbar(props Props) {
	<nav class={ utils.TwMerge("sticky top-0 z-50 w-full border-b border-border bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/90 shadow-sm", props.Class) }>
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="flex justify-between items-center h-16">
				// Logo - Crunchbase style
				<div class="flex-shrink-0">
					<a href="/" class="flex items-center space-x-2">
						<div class="w-8 h-8 bg-primary rounded-md flex items-center justify-center">
							<span class="text-white font-bold text-lg">K</span>
						</div>
						<span class="font-bold text-xl text-foreground">Tiger</span>
					</a>
				</div>
				
				// Desktop Navigation - Crunchbase style
				<div class="hidden lg:block">
					<div class="flex items-center space-x-8">
						for _, item := range props.Nav.Items {
							<a 
								href={ templ.SafeURL(item.URL) }
								class={ utils.TwMerge(
									"px-3 py-2 text-sm font-medium transition-colors duration-200 hover:text-primary",
									utils.IfElse(
										props.ActiveNav == item.Name,
										"text-primary font-semibold",
										"text-muted-foreground",
									),
								) }
							>
								{ item.Name }
							</a>
						}
					</div>
				</div>

				// Right side items - Crunchbase style
				<div class="hidden lg:flex items-center space-x-3">
					if props.User != nil {
						// User menu
						<div class="relative" x-data="{ open: false }">
							<button 
								@click="open = !open"
								class="flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium text-foreground hover:bg-secondary transition-colors"
							>
								<div class="w-8 h-8 bg-primary rounded-full flex items-center justify-center">
									<span class="text-white text-sm font-semibold">
										{ string(props.User.Name[0]) }
									</span>
								</div>
								<span>{ props.User.Name }</span>
								<svg class="w-4 h-4 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
								</svg>
							</button>
							
							<div 
								x-show="open" 
								@click.away="open = false"
								x-transition:enter="transition ease-out duration-100"
								x-transition:enter-start="transform opacity-0 scale-95"
								x-transition:enter-end="transform opacity-100 scale-100"
								x-transition:leave="transition ease-in duration-75"
								x-transition:leave-start="transform opacity-100 scale-100"
								x-transition:leave-end="transform opacity-0 scale-95"
								class="absolute right-0 mt-2 w-48 bg-white border border-border rounded-lg shadow-lg py-2 z-50"
							>
								<a href="/profile" class="block px-4 py-2 text-sm text-foreground hover:bg-secondary">Profile</a>
								<a href="/change-password" class="block px-4 py-2 text-sm text-foreground hover:bg-secondary">Change Password</a>
								<a href="/settings" class="block px-4 py-2 text-sm text-foreground hover:bg-secondary">Settings</a>
								<hr class="my-1 border-border"/>
								<a href="/logout" class="block px-4 py-2 text-sm text-foreground hover:bg-secondary">Sign out</a>
							</div>
						</div>
					} else {
						<a 
							href="/register" 
							class="text-sm font-medium text-muted-foreground hover:text-foreground px-3 py-2 transition-colors"
						>
							Sign up
						</a>
						<a 
							href="/login" 
							class="bg-primary hover:bg-primary/90 text-primary-foreground px-4 py-2 rounded-lg text-sm font-medium transition-colors shadow-sm"
						>
							Log in
						</a>
					}
				</div>

				// Mobile menu button
				<div class="lg:hidden">
					<button 
						id="mobile-menu-button"
						class="p-2 rounded-md text-muted-foreground hover:text-foreground hover:bg-secondary transition-colors"
						onclick="toggleMobileMenu()"
					>
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
						</svg>
					</button>
				</div>
			</div>
		</div>

		// Mobile menu - Crunchbase style
		<div id="mobile-menu" class="lg:hidden hidden">
			<div class="px-4 pt-2 pb-3 space-y-1 bg-white border-t border-border shadow-lg">
				for _, item := range props.Nav.Items {
					<a 
						href={ templ.SafeURL(item.URL) }
						class={ utils.TwMerge(
							"block px-3 py-3 text-base font-medium transition-colors border-b border-border/50",
							utils.IfElse(
								props.ActiveNav == item.Name,
								"text-primary font-semibold",
								"text-muted-foreground hover:text-foreground",
							),
						) }
					>
						{ item.Name }
					</a>
				}
				
				<div class="pt-4 pb-2 border-t border-border">
					if props.User != nil {
						<div class="px-3 py-2">
							<div class="text-base font-semibold text-foreground">{ props.User.Name }</div>
							<div class="text-sm text-muted-foreground">{ props.User.Email }</div>
						</div>
						<a href="/profile" class="block px-3 py-2 text-base font-medium text-muted-foreground hover:text-foreground">Profile</a>
						<a href="/change-password" class="block px-3 py-2 text-base font-medium text-muted-foreground hover:text-foreground">Change Password</a>
						<a href="/settings" class="block px-3 py-2 text-base font-medium text-muted-foreground hover:text-foreground">Settings</a>
						<a href="/logout" class="block px-3 py-2 text-base font-medium text-muted-foreground hover:text-foreground">Sign out</a>
					} else {
						<div class="px-3 space-y-2">
							<a href="/register" class="block w-full text-center bg-secondary text-foreground px-4 py-2 rounded-lg text-sm font-medium">Sign up</a>
							<a href="/login" class="block w-full text-center bg-primary text-primary-foreground px-4 py-2 rounded-lg text-sm font-medium">Log in</a>
						</div>
					}
				</div>
			</div>
		</div>
	</nav>

	<script>
		function toggleMobileMenu() {
			const menu = document.getElementById('mobile-menu');
			menu.classList.toggle('hidden');
		}
	</script>
}